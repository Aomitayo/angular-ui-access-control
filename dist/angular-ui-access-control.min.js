"use strict";angular.module("aomitayo.angular-ui-access-control",["ui.router"]),angular.module("aomitayo.angular-ui-access-control").provider("sentinel",["$urlRouterProvider",function(){function Sentinel(options,configs,$rootScope,$state,$location,$injector,$q){var self=this;self.options=angular.copy(options),self.configs=configs,self.$state=$state,self.$location=$location,self.$injector=$injector,self.$q=$q,$rootScope.$on("$stateChangeStart",function(evt,toState,toParams){if(self.active){var config=self.configs.states[toState.name];if(config){if(toState.sentinelAllow)return toState.sentinelAllow=!1,void 0;evt.preventDefault(),self.checkPermissions(toState.data,config,self.options.grants,$q).then(function(allow){allow?(toState.sentinelAllow=!0,$state.go(toState.name,toParams)):null===allow?(self.redirectTo(self.options.whenNoGrants),$rootScope.$broadcast("sentinel.nogrant",toState,toParams)):(self.redirectTo(self.options.whenDenied),$rootScope.$broadcast("sentinel.denied",toState,toParams))})}}})}var defaultOptions={whenDenied:"denied",whenNoGrants:"login",grants:null};return Sentinel.prototype={constructor:Sentinel,intersection:function(arr1,arr2){var intersection=[];return angular.forEach(arr1,function(v){-1!=arr2.indexOf(v)&&intersection.push(v)}),intersection},requireAll:function(required,granted){var intersection=this.intersection(required,granted);return intersection.length==required.length},requireAny:function(required,granted){var intersection=this.intersection(required,granted);return intersection.length>0},checkPermissions:function(data,config,grants,$q){var self=this;return data=data||{},$q.all({grants:$q.when(self.resolveArray(grants)),all:$q.when(self.resolveArray(config.requireAll||data.requireAll||[])),any:$q.when(self.resolveArray(config.requireAny||data.requireAny||[]))}).then(function(args){var ret=args.grants&&(self.requireAll(args.all,args.grants)||self.requireAny(args.any,args.grants));return ret})},resolveArray:function(val,injectionContext,locals){var self=this;if(injectionContext=injectionContext||{},locals=locals||{},!angular.isFunction(val)&&!angular.isArray(val))throw new Error("Invalid type:  Array, function or Injection Annotated function expected");return val=angular.isFunction(val)||angular.isArray(val)&&angular.isFunction(val[val.length-1])?self.$injector.invoke(val,injectionContext,locals):val},activate:function(){this.active=!0},deactivate:function(){this.active=!1},redirectTo:function(path){var self=this,r=new RegExp("^./|/");r.test(path)?self.$location.path(path):self.$state.go(path)}},{options:{},configs:{states:{},routes:{}},sentinel:null,$get:["$rootScope","$state","$location","$injector","$q",function($rootScope,$state,$location,$injector,$q){return this.sentinel=this.sentinel||new Sentinel(this.options,this.configs,$rootScope,$state,$location,$injector,$q),this.sentinel}],setOptions:function(options){return this.options=angular.extend(this.options,defaultOptions,options),this},watchState:function(name,config){return this.configs.states[name]=config,this}}}]);